{
	"home": {
		"title": "react-strings",
		"subtitle": "Mant칠n tu contenido organizado, f치cil de actualizar y multiling칲e, creado para React.",
		"developer": "Desarrollado por ",
		"sum": {
			"title": "Resumen",
			"data": "Esta gu칤a muestra la implementaci칩n de react-strings en un sitio web est치tico desarrollado con nextjs y typescript usando locales. Este sitio fue desarrollado con las tecnolog칤as mencionadas en esta gu칤a, puedes encontrar el c칩digo fuente en el siguiente ",
			"repository": "repositorio",
			"auto": "Recuerda que el auto completado sirve tanto para typescript como javascript, solo aseg칰rate de usar las claves del idioma principal y mantener la estructura de las funciones de strings y arrays"
		},
		"links": {
			"dev": "https://intorandom.com",
			"repo": "https://github.com/intoRandom/react-strings-next",
			"coffee": "https://buymeacoffee.com/intorandom"
		},
		"npm": "npm install react-strings",
		"inst": {
			"title": "Instalaci칩n",
			"data": "react-strings puede instalarse f치cilmente con:"
		},
		"config": {
			"title": "Configuraci칩n",
			"data": "react-strings solo necesita los siguientes archivos:",
			"files": [
				{
					"data": "Idiomas, estos archivos contienen la informaci칩n correspondiente a cada idioma",
					"file": [
						"@/data/messages/es.js ",
						"",
						"// para autocompletar claves sin TypeScript, el idioma principal debe ser un archivo js",
						"const data = { ",
						"  \"title\": \"Bienvenido a react-strings\",",
						"  \"version\": \"Versi칩n actual: {{version}}\", // incluir m칰ltiples {{values}} ",
						"  \"features\": [",
						"    { \"title\": \"Autocompletado\", \"data\": \"Recordar claves\" },",
						"    { \"title\": \"Idiomas\", \"data\": \"Soporte multilenguaje\" },",
						"  ]",
						"}",
						"export default data",
						"",
						"",
						"@/data/messages/en.json ",
						"",
						"{ ",
						"// los strings faltantes ser치n reemplazadas:",
						"  \"language\": \"path.keys\" // en desarrollo",
						"  \"language\": \"Bienvenido a react-strings\" // por defecto en producci칩n",
						"  \"version\": \"Current version: {{version}}\",",
						"// los arrays faltantes ser치n reemplazados:",
						"  \"features\": [] // en desarrollo",
						"  \"features\": [",
						"    { \"title\": \"Autocompletado\", \"data\": \"Recordar claves\" },",
						"    { \"title\": \"Idiomas\", \"data\": \"Soporte multilenguaje\" },",
						"  ] // por defecto en producci칩n",
						"}"
					]
				},
				{
					"data": "Configuraci칩n, este archivo tendr치 la siguiente estructura y se utiliza para inicializar la gesti칩n de strings",
					"file": [
						"@/data/stringsConfig.ts ",
						"",
						"'use client' ",
						"",
						"import { createStrings } from 'react-strings'; ",
						"",
						"// Importa tu idioma principal para autocompletar claves ",
						"import es from \"@/data/messages/es.json\"; ",
						"",
						"const initStrings: LangConfigType = createStrings({ ",
						"// strings necesita solo una clave, las dem치s ser치n ignoradas",
						"// direction: opcional, 칰til para idiomas rtl",
						"  strings: { es: { data: es, direction: \"ltr\" } },",
						"// importa otros idiomas como promesas, 칰salos bajo demanda",
						"  languages: { ",
						"    en: { loader: () => import(\"@/data/messages/en.json\") },",
						"    ar: { loader: () => import(\"@/data/messages/ar.json\"), direction:\"rtl\" }",
						"  },",
						"// browser: opcional, 칰salo para obtener idiomas del navegador",
						"  browser: true, ",
						"// storage: opcional, 칰salo para preservar preferencias del usuario",
						"  storage: true,",
						"// Los siguientes valores se usan en transiciones para evitar parpadeo",
						"// bgColor: opcional, usa colores CSS, por defecto blanco",
						"  bgColor: \"white\",",
						"// duration: opcional, en milisegundos, por defecto 200",
						"  duration: 100 ",
						"});",
						"",
						"// getLocale: devuelve un locale tras resolver storage y navegador",
						"export const { StringsProvider, useStrings, getLocale } = initStrings;"
					]
				},
				{
					"data": "Contenedor, este debe ubicarse en el layout del proyecto o de la ruta",
					"file": [
						"@/app/layout.tsx ",
						"",
						"... ",
						"import { StringsProvider } from '@/data/stringsConfig'; ",
						"",
						"export default function RootLayout({ ",
						"  children, ",
						"}: Readonly<{ ",
						"  children: React.ReactNode; ",
						"}>) { ",
						"   return ( ",
						"    <html lang='es'> ",
						"      <body > ",
						"// locale: opcional, usado para bundle de un solo idioma ",
						"        <StringsProvider locale:'en' > ",
						"          {children} ",
						"        </StringsProvider> ",
						"      </body> ",
						"    </html> ",
						"  ); ",
						"}"
					]
				},
				{
					"data": "Eso es todo lo necesario para dar soporte multilenguaje a tu proyecto. Para obtener los strings o arrays de cada idioma solo usa el hook useStrings dentro de un componente",
					"file": [
						"\"use client\"; ",
						"",
						"import { useStrings } from '@/data/stringsConfig'; ",
						"",
						" const UseHooks = () => { ",
						"  const { Str, Arr, language, setLanguage } = useStrings(); ",
						"",
						"  return ( ",
						"    <section> ",
						"// esto devuelve el idioma actual ",
						"      <h1>{language}</h1> ",
						"",
						"// este bot칩n cambia el idioma actual ",
						"// setLanguage se desactiva si locale est치 en provider ",
						"      <button onClick={()=>setLanguage(\"es\")}>Cambiar idioma</button> ",
						"",
						"// esto devuelve un string ",
						"      <h2>{Str.home.title()}</h2> ",
						"",
						"// esto devuelve un string con valor din치mico ",
						"      <p>{Str.home.version({ version: '0.2.0' })}</p> ",
						"",
						"// esto devuelve un array ",
						"      <ul> ",
						"        {Arr.home.features.map((item) => ( ",
						"          <li key={item.title}> ",
						"            <h2>{item.title}</h2> ",
						"            <p>{item.data}</p> ",
						"          </li> ",
						"        ))} ",
						"      </ul> ",
						"    </section> ",
						"  ); ",
						"}; ",
						"",
						"export default UseHooks; "
					]
				}
			]
		},
		"final": "춰Fue divertido (y a veces muy frustrante 游땐) construir este paquete! Si quieres apoyar su desarrollo, una peque침a donaci칩n ayuda mucho",
		"coffee": "Inv칤tame un caf칠",
		"end": "Cada chispa hace que el proyecto brille m치s"
	}
}
